//----------------------------------------------------------------
// Copyright (C) 2021 奇安信科技集团 版权所有
//
// 文件名：CryptoService.proto
// 文件功能描述：Quick SDK gRPC接口定义
//
// 版本：V1.0.0
//----------------------------------------------------------------
syntax = "proto3";

package quick.api.grpc.v1;

import "CryptoStruct.proto";

option java_multiple_files = true;
option java_outer_classname = "QuickCryptoService";
option java_package = "org.quick.api.grpc.v1";
option go_package = "quick/api/grpc/v1;apigrpcv1";
option optimize_for = CODE_SIZE;

// 密码服务SDK套件接口Quick Interface定义
//
// SDK服务套件提供以下能力：
// - 密码服务SDK套件提供数据加解密、签名验签、数字信封、摘要计算、随机数等接口服务能力；
// - 向下支持对接不同厂商的异构密码设备，并将密码设备进行会话级别（Session)的细粒度管理与调度；
// - 为应用开发提供支持包括C/C++、Java、Go、PHP、.Net、Shell等语言的密码服务接口调用；
// - 支持内置密码机软件模拟器，可方便开发人员进行应用无密码设备开发集成与调试；
// - 支持性能较好的gRPC接口。
service CryptoService {

    //**********************//
    //防疫平台密码服务接口
    //**********************//
    // 存储数据加密运算
    rpc DataEncrypt(DataEncryptRequest) returns(DataEncryptResponse){}

    // 存储数据解密运算
    rpc DataDecrypt(DataDecryptRequest) returns(DataDecryptResponse){}

    //**********************//
    //防疫平台密码服务接口 end
    //**********************//

    //**********************//
    // 标准服务接口
    //**********************//
    // 数字签名
    rpc SignData(SignDataRequest) returns(SignDataResponse){}

    // 验证数字签名
    rpc VerifySignedData(VerifySignedDataRequest) returns(VerifySignedDataResponse){}

    // 计算MAC
    rpc CalculateMAC(CalculateMACRequest) returns(CalculateMACResponse){}

    // 验证MAC
    rpc VerifyMAC(VerifyMACRequest) returns(VerifyMACResponse){}

    // 对称加密
    rpc SymmEncrypt(SymmEncryptRequest) returns(SymmEncryptResponse){}

    // 对称解密
    rpc SymmDecrypt(SymmDecryptRequest) returns(SymmDecryptResponse){}

    // 非对称加密
    rpc AsymEncrypt(AsymEncryptRequest) returns(AsymEncryptResponse){}

    // 非对称解密
    rpc AsymDecrypt(AsymDecryptRequest) returns(AsymDecryptResponse){}

    // 生成时间戳
    rpc CreateTS(CreateTSRequest) returns(CreateTSResponse){}

    // 验证时间戳
    rpc VerifyTS(VerifyTSRequest) returns(VerifyTSResponse){}

    // 解析时间戳信息
    rpc GetTSDetailInfo(GetTSDetailInfoRequest) returns(GetTSDetailInfoResponse){}

    //**********************//
    // 标准服务接口
    //**********************//

}



